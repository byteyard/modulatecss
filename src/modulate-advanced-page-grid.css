@layer base, typography, primitive, page, section, widget, utility, theme, override;

/* ====================================================================================================
    Defaults
==================================================================================================== */
@layer base {
    :root {
        --grid-s-min: 400; /* Screen Size Min for Fluid Sizing of the Grid */
        --grid-s-max: 1400; /* Screen Size Max for Fluid Sizing of the Grid */
        --grid-rem: 16; /* Pixel per REM for Fluid Sizing of the Grid */
        --grid-width-max: 1400; /* Maximum Grid Width */
        --grid-columns: 12; /* Number of Grid Columns */
        --grid-padding: 10; /* Grid Padding */
        --frame-width-min: 0; /* Minimum Frame Width */
        --frame-width-max: 100; /* Maximum Frame Width */
        --column-gap-min: 10; /* Minimum Column Gap Width */
        --column-gap-max: 100; /* Maximum Column Gap Width */
        --row-gap-min: 10; /* Minimum Row Gap Width */
        --row-gap-max: 100; /* Maximum Row Gap Width */

        --spacing-xs-min: 8;
        --spacing-xs-max: 16;
        --spacing-sm-min: 16;
        --spacing-sm-max: 32;
        --spacing-md-min: 32;
        --spacing-md-max: 92;
        --spacing-lg-min: 64;
        --spacing-lg-max: 128;
        --spacing-xl-min: 128;
        --spacing-xl-max: 256;
        --spacing-2xl-min: 256;
        --spacing-2xl-max: 512;
        --autolayout-width: 320px;
    }
}

/* ====================================================================================================
    Fluid Sizing
==================================================================================================== */
@layer base {
    :root {
        --row-gap-v: calc(((100 * (var(--row-gap-max) - var(--row-gap-min))) / (var(--grid-s-max) - var(--grid-s-min))) * 1vw);
        --row-gap-r: calc((((var(--grid-s-min) * var(--row-gap-max)) - (var(--grid-s-max) * var(--row-gap-min))) / (var(--grid-s-min) - var(--grid-s-max))) / var(--grid-rem));
        --row-gap: clamp(calc((var(--row-gap-min) / var(--grid-rem)) * 1rem), calc(var(--row-gap-v) + var(--row-gap-r) * 1rem), calc((var(--row-gap-max) / var(--grid-rem)) * 1rem));

        --column-gap-v: calc(((100 * (var(--column-gap-max) - var(--column-gap-min))) / (var(--grid-s-max) - var(--grid-s-min))) * 1vw);
        --column-gap-r: calc((((var(--grid-s-min) * var(--column-gap-max)) - (var(--grid-s-max) * var(--column-gap-min))) / (var(--grid-s-min) - var(--grid-s-max))) / var(--grid-rem));
        --column-gap: clamp(calc((var(--column-gap-min) / var(--grid-rem)) * 1rem), calc(var(--column-gap-v) + var(--column-gap-r) * 1rem), calc((var(--column-gap-max) / var(--grid-rem)) * 1rem));

        --spacing-xs-v: calc(((100 * (var(--spacing-xs-max) - var(--spacing-xs-min))) / (var(--grid-s-max) - var(--grid-s-min))) * 1vw);
        --spacing-xs-r: calc((((var(--grid-s-min) * var(--spacing-xs-max)) - (var(--grid-s-max) * var(--spacing-xs-min))) / (var(--grid-s-min) - var(--grid-s-max))) / var(--grid-rem));
        --spacing-xs: clamp(calc((var(--spacing-xs-min) / var(--grid-rem)) * 1rem), calc(var(--spacing-xs-v) + var(--spacing-xs-r) * 1rem), calc((var(--spacing-xs-max) / var(--grid-rem)) * 1rem));

        --spacing-sm-v: calc(((100 * (var(--spacing-sm-max) - var(--spacing-sm-min))) / (var(--grid-s-max) - var(--grid-s-min))) * 1vw);
        --spacing-sm-r: calc((((var(--grid-s-min) * var(--spacing-sm-max)) - (var(--grid-s-max) * var(--spacing-sm-min))) / (var(--grid-s-min) - var(--grid-s-max))) / var(--grid-rem));
        --spacing-sm: clamp(calc((var(--spacing-sm-min) / var(--grid-rem)) * 1rem), calc(var(--spacing-sm-v) + var(--spacing-sm-r) * 1rem), calc((var(--spacing-sm-max) / var(--grid-rem)) * 1rem));

        --spacing-md-v: calc(((100 * (var(--spacing-md-max) - var(--spacing-md-min))) / (var(--grid-s-max) - var(--grid-s-min))) * 1vw);
        --spacing-md-r: calc((((var(--grid-s-min) * var(--spacing-md-max)) - (var(--grid-s-max) * var(--spacing-md-min))) / (var(--grid-s-min) - var(--grid-s-max))) / var(--grid-rem));
        --spacing-md: clamp(calc((var(--spacing-md-min) / var(--grid-rem)) * 1rem), calc(var(--spacing-md-v) + var(--spacing-md-r) * 1rem), calc((var(--spacing-md-max) / var(--grid-rem)) * 1rem));

        --spacing-lg-v: calc(((100 * (var(--spacing-lg-max) - var(--spacing-lg-min))) / (var(--grid-s-max) - var(--grid-s-min))) * 1vw);
        --spacing-lg-r: calc((((var(--grid-s-min) * var(--spacing-lg-max)) - (var(--grid-s-max) * var(--spacing-lg-min))) / (var(--grid-s-min) - var(--grid-s-max))) / var(--grid-rem));
        --spacing-lg: clamp(calc((var(--spacing-lg-min) / var(--grid-rem)) * 1rem), calc(var(--spacing-lg-v) + var(--spacing-lg-r) * 1rem), calc((var(--spacing-lg-max) / var(--grid-rem)) * 1rem));

        --spacing-xl-v: calc(((100 * (var(--spacing-xl-max) - var(--spacing-xl-min))) / (var(--grid-s-max) - var(--grid-s-min))) * 1vw);
        --spacing-xl-r: calc((((var(--grid-s-min) * var(--spacing-xl-max)) - (var(--grid-s-max) * var(--spacing-xl-min))) / (var(--grid-s-min) - var(--grid-s-max))) / var(--grid-rem));
        --spacing-xl: clamp(calc((var(--spacing-xl-min) / var(--grid-rem)) * 1rem), calc(var(--spacing-xl-v) + var(--spacing-xl-r) * 1rem), calc((var(--spacing-xl-max) / var(--grid-rem)) * 1rem));

        --spacing-2xl-v: calc(((100 * (var(--spacing-2xl-max) - var(--spacing-2xl-min))) / (var(--grid-s-max) - var(--grid-s-min))) * 1vw);
        --spacing-2xl-r: calc((((var(--grid-s-min) * var(--spacing-2xl-max)) - (var(--grid-s-max) * var(--spacing-2xl-min))) / (var(--grid-s-min) - var(--grid-s-max))) / var(--grid-rem));
        --spacing-2xl: clamp(calc((var(--spacing-2xl-min) / var(--grid-rem)) * 1rem), calc(var(--spacing-2xl-v) + var(--spacing-2xl-r) * 1rem), calc((var(--spacing-2xl-max) / var(--grid-rem)) * 1rem));
    }
}

/* ====================================================================================================
    Layout
==================================================================================================== */
@layer base {
    .page-grid {
        background: var(--cs-background-framed);
        position: relative;
        display: grid;
        width: 100dvw;
        gap: 0;

        --section-padding-block-start: 0;
        --section-padding-block-end: 0;
        --section-margin-block-start: 0;
        --section-margin-block-end: 0;
        --page-grid-rows: [row-start] minmax(0, min-content) [row-end];

        grid-template-rows:
            [module-start]
            var(--section-margin-block-start)
            [frame-start]
            var(--section-padding-block-start)
            var(--page-grid-rows)
            var(--section-padding-block-end)
            [frame-end]
            var(--section-margin-block-end)
            [module-end];

        --column-width: [col-start] minmax(0, calc(((var(--grid-width-max) * 1px) - ((var(--grid-columns) - 1) * var(--column-gap))) / var(--grid-columns))) [col-end];
        --gap-half: calc(var(--column-gap) / 2);
        --split-gap: var(--gap-half) [gap] var(--gap-half);
        --column-repeat: repeat(calc((var(--grid-columns) / 2) - 1), var(--column-width) var(--split-gap));
        --columns: var(--column-repeat) var(--column-width) var(--split-gap) var(--column-repeat) var(--column-width);
        --frame-width: minmax(calc(var(--frame-width-min) * 1px), calc(var(--frame-width-max) * 1px));

        grid-template-columns:
            [screen-start]
            calc(var(--grid-padding) * 1px)
            [padding-start]
            1fr
            [frame-start]
            var(--frame-width)
            var(--columns)
            var(--frame-width)
            [frame-end]
            1fr
            [padding-end]
            calc(var(--grid-padding) * 1px)
            [screen-end];

        /* ----------------------------------------------------------------------------------------
            Backdrop & Background
        */
        &::before {
            content: "";
            position: relative;
            background: var(--cs-backdrop);
            z-index: 1;
        }

        &::after {
            content: "";
            position: relative;
            background: var(--cs-background);
            z-index: 2;
        }

        & > * {
            z-index: 3;
        }
    }

    /* ----------------------------------------------------------------------------------------
        Card Grid
    */
    .autolayout {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(var(--autolayout-width), 1fr));
        column-gap: var(--column-gap);
        row-gap: var(--row-gap);
        max-inline-size: 100%;
    }
}
